USE ROLE ACCOUNTADMIN;

-- CREATE ROLE AND GRANT IT TO ACCOUNT ADMIN
CREATE ROLE IF NOT EXISTS TRANSFORM;
GRANT ROLE TRANSFORM TO ROLE ACCOUNTADMIN;

-- CREATE A DEFAULT WAREHOUSE
CREATE WAREHOUSE IF NOT EXISTS COMPUTE_WH;
GRANT OPERATE ON WAREHOUSE COMPUTE_WH TO ROLE TRANSFORM;

--CREATE DBT USER AND ASSIGN TO TRANSFORM ROLE 

CREATE USER IF NOT EXISTS dbt
PASSWORD = 'dbtpassword123'
LOGIN_NAME = 'dbt'
MUST_CHANGE_PASSWORD = FALSE
DEFAULT_WAREHOUSE = 'COMPUTE_WH'
DEFAULT_ROLE = TRANSFORM
DEFAULT_NAMESPACE = 'MOVIELENS.RAW'
COMMENT = 'DBT USER USED FOR TRANSFORMATIONS';
ALTER USER dbt SET TYPE = LEGACY_SERVICE;
GRANT ROLE TRANSFORM TO USER dbt;

-- CREATE DATABASE AND SCHEMA FOR MOVIELENS PROJECT
CREATE DATABASE IF NOT EXISTS MOVIELENS;
CREATE SCHEMA IF NOT EXISTS MOVIELENS.RAW;

-- GRANT PERMISSIONS TO THE TRANSFORM ROLE

GRANT ALL ON WAREHOUSE COMPUTE_WH TO ROLE TRANSFORM;
GRANT ALL ON DATABASE MOVIELENS TO  ROLE TRANSFORM;
GRANT ALL ON ALL SCHEMAS IN DATABASE MOVIELENS TO ROLE TRANSFORM;
GRANT ALL ON  FUTURE SCHEMAS IN DATABASE MOVIELENS TO ROLE TRANSFORM;
GRANT ALL ON ALL TABLES IN SCHEMA MOVIELENS.RAW TO ROLE TRANSFORM;
GRANT ALL ON FUTURE TABLES IN SCHEMA MOVIELENS.RAW TO ROLE TRANSFORM;


CREATE OR REPLACE STORAGE INTEGRATION movies_int
  TYPE = EXTERNAL_STAGE
  STORAGE_PROVIDER = AZURE
  ENABLED = TRUE
  AZURE_TENANT_ID = 'a4a73087-ba53-4e9e-9764-b268cdd388f6'
  STORAGE_ALLOWED_LOCATIONS = ('azure://moviesnf.blob.core.windows.net/netflixmovies');

DESCRIBE STORAGE INTEGRATION movies_int;

-- create file format
create or replace file format fileformat_azure
    TYPE = CSV
    FIELD_DELIMITER = ','
    SKIP_HEADER = 1
    FIELD_OPTIONALLY_ENCLOSED_BY='"';

CREATE OR REPLACE STAGE netflix_stage
STORAGE_INTEGRATION = movies_int
URL = 'azure://moviesnf.blob.core.windows.net/netflixmovies'
FILE_FORMAT = fileformat_azure;

DESCRIBE STAGE netflix_stage;
LIST @netflix_stage;
